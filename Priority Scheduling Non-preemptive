#include<stdio.h>

void sortBurst(int a[],int b[],int n){
    int temp = 0,temp1 = 0;
    for(int i=1; i<n; i++){
        for(int j=0; j<i; j++){
            if(a[j] > a[i]){
                temp = a[j],temp1 = b[j];
                a[j] = a[i], b[j] = b[i];
                a[i] = temp, b[i] = temp1;
            }
        }
    }
}

int main()
{
    int bt[20],prio[20],p[20],wt[20],tat[20],i,n,total=0,sum = 0;
    float avg_wt,avg_tat;
    printf("Enter number of process:");
    scanf("%d",&n);

    printf("\nEnter Burst Time and Priority:\n");
    for(i=0;i<n;i++)
    {
        printf("p%d:",i+1);
        scanf("%d %d",&bt[i],&prio[i]);
        sum += bt[i];
        p[i]=i+1;           //contains process number
    }

    sortBurst(prio,p,n);
    wt[0]=0;            //waiting time for first process will be zero

    //calculate waiting time
    for(i=1;i<n;i++)
    {
        wt[i] = wt[i-1] + bt[p[i-1]-1];
        total += wt[i];
    }

    avg_wt = (float)total/n;      //average waiting time
    total = 0;

    printf("\nProcess\t    Burst Time    \tWaiting Time\tTurnaround Time");
    for(i=0;i<n;i++)
    {
        tat[i]=bt[p[i]-1]+wt[i];     //calculate turnaround time
        total+=tat[i];
        printf("\np%d\t\t  %d\t\t    %d\t\t\t%d",p[i],bt[p[i]-1],wt[i],tat[i]);
    }
    avg_tat=(float)total/n;     //average turnaround time
    printf("\n\nAverage Waiting Time=%f",avg_wt);
    printf("\nAverage Turnaround Time=%f\n",avg_tat);

    return 0;
}
